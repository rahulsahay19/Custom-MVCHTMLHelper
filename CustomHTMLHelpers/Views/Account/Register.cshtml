@using CustomHTMLHelpers.CustomHelpers
@model CustomHTMLHelpers.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.BootstrapTextBoxFor(m => m.Email,HTMLCommonExtensions.HTML5InputTypes.email, "Email","Enter Email here",true,true)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.BootstrapTextBoxFor(m=>m.Password,HTMLCommonExtensions.HTML5InputTypes.password,"Password", "Enter Password here",true,false)
            @*@Html.PasswordFor(m => m.Password, new { @class = "form-control" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @*@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })*@
            @Html.BootstrapTextBoxFor(m => m.ConfirmPassword, HTMLCommonExtensions.HTML5InputTypes.password, "Password", "Enter Password again", true, false)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" class="btn btn-default" value="Register" />*@
            @Html.BootstrapButton("<i class='glyphicon glyphicon-plus'></i>&nbsp;Register",
            "btn-sm btn-primary",
            "registerButton",
            "Click here to Register!",
            false,
            true,
            HTMLCommonExtensions.HTMLButtonTypes.submit,
            "register")
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
